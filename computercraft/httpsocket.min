local function a(b,c,d)local e="?"for f,g in pairs(d)do e=e..textutils.urlEncode(f).."="..textutils.urlEncode(g).."&"end;local e=e:sub(1,#e-1)local h=http.get(b..c..e)if not h then return{success=false}end;local i=textutils.unserialize(h.readAll())h.close()if not i then return{success=false}end;return i end;function connect(b,j)local k,l=http.checkURL(b)local i;if not k then error(l,2)end;i=a(b,"api",{})if not i.success then return false end;i=a(b,"api/connect",{name=j})if not i.success then return false end;sock={server=b,name=i.data.name,id=i.data.id}setmetatable(sock,{__index={lookup=function()local i=a(sock.server,"api",{get="socket",name=sock.name,id=sock.id})return i.success,i.data end,ping=function()local i=a(sock.server,"api/ping",{name=sock.name,id=sock.id})return i.success end,send=function(m,n)if type(m)~="string"or type(n)~="string"then error("Expected string, string",2)end;local i=a(sock.server,"api/send",{name=sock.name,id=sock.id,to=m,message=n})return i.success,i.data end,broadcast=function(n)if type(n)~="string"then error("Expected string",2)end;local i;i=a(sock.server,"api",{get="socket"})if not i.success then return i.success end;local o={}for p,q in pairs(i.data)do i=a(sock.server,"api/send",{name=sock.name,id=sock.id,to=q.name,n})if not i.success then return false end;table.insert(o,i.data)end;return true,o end,receive=function()local i=a(sock.server,"api/receive",{name=sock.name,id=sock.id})return i.success,i.data end,close=function()local i=a(sock.server,"api/disconnect",{name=sock.name,id=sock.id})return i.success end}})return sock end;function time(b)if type(b)~="string"then error("Expected string",2)end;local i=a(b,"api",{get="time"})return i.success,i.data end;function lookup(b,j)if type(b)~="string"then error("Expected string",2)elseif j and type(j)~="string"then error("Expected string, string",2)end;local i=a(b,"api",{get="socket",name=j})return i.success,i.data end
