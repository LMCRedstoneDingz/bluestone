local function a(b,c,d)return c:rep(d-#b)..b end;local function e(f)local g=""for h=1,#f,1 do g=g..a(string.format("%x",string.byte(f:sub(h,h))),"0",2)end;return g end;local function i(g)local f=""for h=1,#g,2 do f=f..string.char(tonumber(g:sub(h,h+1),16))end;return f end;local function j(k,l,m)local n="?"for o,p in pairs(m)do n=n..textutils.urlEncode(o).."="..textutils.urlEncode(p).."&"end;local n=n:sub(1,#n-1)local q=http.get(k..l..n)if not q then return{success=false}end;local r=textutils.unserialize(q.readAll())q.close()if not r then return{success=false}end;return r end;function connect(k,s)local t,u=http.checkURL(k)local r;if not t then error(u,2)end;r=j(k,"api",{})if not r.success then return false end;r=j(k,"api/connect",{name=s})if not r.success then return false end;sock={server=k,name=r.data.name,id=r.data.id}setmetatable(sock,{__index={lookup=function()local r=j(sock.server,"api",{get="socket",name=sock.name,id=sock.id})return r.success,r.data end,ping=function()local r=j(sock.server,"api/ping",{name=sock.name,id=sock.id})return r.success end,send=function(v,f)if type(v)~="string"or type(f)~="string"then error("Expected string, string",2)end;local r=j(sock.server,"api/send",{name=sock.name,id=sock.id,to=v,message=e(f)})if r.success then r.data.message=i(r.data.message)end;return r.success,r.data end,broadcast=function(f)if type(f)~="string"then error("Expected string",2)end;local r;r=j(sock.server,"api",{get="socket"})if not r.success then return r.success end;local w={}local g=e(f)for h,x in pairs(r.data)do r=j(sock.server,"api/send",{name=sock.name,id=sock.id,to=x.name,message=g})if not r.success then return false end;r.data.message=i(r.data.message)table.insert(w,r.data)end;return true,w end,receive=function()local r=j(sock.server,"api/receive",{name=sock.name,id=sock.id})if r.success then for h=1,#r.data,1 do r.data[h].message=i(r.data[h].message)end end;return r.success,r.data end,close=function()local r=j(sock.server,"api/disconnect",{name=sock.name,id=sock.id})return r.success end}})return sock end;function time(k)if type(k)~="string"then error("Expected string",2)end;local r=j(k,"api",{get="time"})return r.success,r.data end;function lookup(k,s)if type(k)~="string"then error("Expected string",2)elseif s and type(s)~="string"then error("Expected string, string",2)end;local r=j(k,"api",{get="socket",name=s})return r.success,r.data end
