if not fs.exists(shell.resolve("aeslua"))then local a=http.get("https://git.io/aeslua")if not a then printError("Failed to download aeslua.")return end;local b=fs.open(shell.resolve("aeslua"),"w")if not b then printError("Failed to download aeslua.")a.close()return end;b.write(a.readAll())a.close()b.close()end;if not aeslua then if not os.loadAPI(shell.resolve("aeslua"))then printError("Failed to load aeslua.")return end end;local c={...}if#c<4 or c[1]~="encrypt"and c[1]~="decrypt"then printError("Usage: "..shell.getRunningProgram().." encrypt <from> <to> <password>")printError("       "..shell.getRunningProgram().." decrypt <from> <to> <password>")return end;if not fs.exists(shell.resolve(c[2]))then printError("File doesn't exist.")return end;local function d(e)e="/"..e.."/"repeat e=e:gsub("//","/")until not e:find("//")return e end;local function f()os.queueEvent("yield")os.pullEventRaw("yield")end;local function g(e)f()local h;if fs.isReadOnly(e)then return end;if fs.isDir(e)then h={d=true,c={}}for i,j in pairs(fs.list(e))do h.c[j]=g(e..j.."/")end else print("Encrypting \""..e:sub(1,#e-1).."\"...")h={d=false,c=""}local b=fs.open(e,"r")if b then h.c=b.readAll()b.close()end end;return h end;local function k(e,l)f()if l.d then for j,m in pairs(l.c)do k(e..j.."/",m)end else print("Decrypting \""..e:sub(1,#e-1).."\"...")local b=fs.open(e,"w")if b then b.write(l.c)b.close()end end;return end;local function n(o,p,q)if#o<q then repeat o=p..o until#o>=q end;return o end;local function r(o)local s=""for i=1,#o,1 do s=s..n(string.format("%x",string.byte(o:sub(i,i))),"0",2)f()end;return s end;local function t(s)local o=""for i=1,#s,2 do o=o..string.char(tonumber(s:sub(i,i+1),16))f()end;return o end;if c[1]=="encrypt"then local u=fs.open(d(shell.resolve(c[3])),"w")if not u then printError("Failed to open destination file.")return end;u.write(r(aeslua.encrypt(c[4],data.deflate(textutils.serialize(g(d(shell.resolve(c[2]))))))))u.close()print("Encryption Complete!")else local v=fs.open(d(shell.resolve(c[2])),"r")if not v then printError("Failed to open source file.")v.close()return end;local l;local w,x=pcall(function()l=textutils.unserialize(data.inflate(aeslua.decrypt(c[4],t(v.readAll()))))end)v.close()if not(w and l)then if x then printError("Failed to read source file: "..x)else printError("Failed to read source file.")end;return end;if l.d and not fs.exists(shell.resolve(c[3]))then fs.makeDir(shell.resolve(c[3]))end;k(d(shell.resolve(c[3])),l)print("Decryption complete!")end
